@using System.Globalization
@using BlazorStatic.Models

<article>
    <div class="divide-y  divide-primary-700">
        <header class="pt-6 xl:pb-6">
            <div class="space-y-1 text-center">
                <dl class="space-y-10">
                    <div>
                        <dt class="sr-only">Published on</dt>
                        <dd class="text-base font-medium leading-6 text-primary-800 dark:text-primary-400">
                            <time
                                datetime="@Post.FrontMatter.Date.ToString("yyyy-MM-ddTHH:mm:ss.fffK", CultureInfo.InvariantCulture)">
                                @Post.FrontMatter.Date.ToString("MMMM d, yyyy", new CultureInfo("en-US"))
                            </time>
                        </dd>
                    </div>
                </dl>
                <div class="prose prose-stone dark:prose-invert mx-auto">
                    <h1 class="">@Post.FrontMatter.Title</h1>
                </div>
            </div>
        </header>

        @if (Series != null)
        {
            <div class="p-4 text-neutral-700 dark:text-neutral-100/75">
                <p>This post is part of a series</p>
                <ul class="mt-4 space-y-1 list-disc  pl-6">
                    @foreach (var post in Series)
                    {
                        @if (post.Url == Post.Url)
                        {
                            <li><strong>@post.FrontMatter.Title</strong></li>
                        }
                        else
                        {
                            <li><a href="@post.NavigateUrl">@post.FrontMatter.Title</a></li>
                        }
                    }
                </ul>
            </div>
        }

        <div
            class="grid-rows-[auto_1fr] divide-y pb-8 divide-primary-700 lg:grid lg:grid-cols-12 lg:gap-x-12 xl:gap-x-20 xl:divide-y-0">
            <div class="divide-y  divide-primary-700  lg:col-span-9 xl:row-span-2 xl:pb-0">
                <div
                    class="prose prose-stone dark:prose-invert mt-8 prose-base md:prose-lg max-w-full lg:leading-loose">
                    @((MarkupString)Post.HtmlContent)
                </div>
            </div>
            <aside class="sticky scroll-m-32 lg:col-span-3 top-16 max-h-screen ">
                <div
                    class=" text-sm font-medium leading-5 divide-primary-700 xl:col-start-1 xl:row-start-2 xl:divide-y">
                    <div class="py-4 xl:py-8">
                        <h2 class="text-xs uppercase tracking-wide text-primary-500 dark:text-primary-400">Tags</h2>
                        <div class="flex flex-wrap">
                            @foreach (var tag in Post.Tags)
                            {
                                <a class="text-primary-900 dark:text-neutral-100 hover:text-primary-400 mr-3 text-sm font-medium uppercase"
                                   href="@tag.NavigateUrl">@tag.Name</a>
                            }
                        </div>
                    </div>
                </div>

                @if (Post.TableOfContents.Length > 1)
                {
                    <div class="hidden lg:block">
                    <h2 class="text-xs uppercase tracking-wide text-primary-500 dark:text-primary-400">On This Page</h2>
                    <ul class="list-none text-sm mt-6 text-neutral-900 font-light dark:font-semilight dark:text-neutral-50/60">
                        @foreach (var entry in Post.TableOfContents)
                        {
                            <li class="flex"><a class="border-neutral-200 dark:border-neutral-700 hover:text-primary-900 dark:hover:text-neutral-50/90 border-l-2 pl-4 pt-1 aria-selected:text-primary-800 aria-selected:border-accent-700 dark:aria-selected:text-primary-400 aria-selected:border-accent-400" href="@Post.NavigateUrl#@entry.Id">@entry.Title</a></li>
                            @if (entry.Children.Length > 0)
                            {
                                <ul class="pb-1px">
                                    @foreach (var childEnry in entry.Children)
                                    {
                                        <li class="flex"><a class="transition-colors border-neutral-200 hover:text-primary-900 dark:hover:text-neutral-50/90 dark:border-neutral-700  border-l-2 pl-8 pt-1 aria-selected:text-primary-800 aria-selected:border-accent-700 dark:aria-selected:text-primary-400 aria-selected:border-accent-400" href="@Post.NavigateUrl#@childEnry.Id">@childEnry.Title</a></li>
                                    }
                                </ul>
                            }
                        }
                    </ul>
                    </div>
                }
                
                @if (string.IsNullOrWhiteSpace(Post.FrontMatter.Repository) == false)
                {
                    <a class="block" href="@Post.FrontMatter.Repository">
                    <div class="mt-8 border bg-base-400/5 border-primary-50/25 p-4 rounded rounded-lg" >
                        <h2 class="text-xs uppercase tracking-wide text-primary-500 dark:text-primary-400">Source Code</h2>
                        <p class="mt-2 text-primary-900/75 dark:text-neutral-50/90 hover:text-primary-400 mr-3 text-sm font-light">Example source code for this post</p>
                    </div>
                        </a>
                }
                
                <div class="pt-4 xl:pt-8">
                    <a class="text-primary-500 hover:text-primary-400" aria-label="Back to the home" href="">← Back to the home</a>
                </div>
            </aside>
        </div>
    </div>
</article>

@code {
    [Parameter] public required Post<FrontMatter> Post { get; init; }
    [Parameter] public required List<Post<FrontMatter>>? Series { get; init; }
}