@page "/tags"
@using System.Collections.Immutable
@using BlazorStatic
@using BlazorStatic.Services.Content
@using Thirty25.Web.Components.Layout
@inject BlazorStaticMarkdownContentService<BlogFrontMatter> BlogService
@inject BlazorStaticOptions BlazorStaticOptions


<PageTitle>@BlazorStaticOptions.BlogTitle - Tags</PageTitle>
<PageHeader Title="All Tags"></PageHeader>

@if (_tagsWithCount == null)
{
    <div>No tags?</div>
    return;
}

<div class="flex flex-wrap justify-between gap-1">
    @{
        foreach (var tagGroup in _tagsWithCount)
        {
            <a class="text-primary-500 hover:text-primary-400 mr-3 text-sm font-medium uppercase"
               href="@tagGroup.Tag.NavigateUrl"> @tagGroup.Tag.Name (@tagGroup.Count) </a>
        }
    }
</div>


@code {
    private ImmutableList<(BlazorStatic.Models.Tag Tag, int Count)>? _tagsWithCount;

    protected override async Task OnInitializedAsync()
    {
        _tagsWithCount = (await BlogService.GetAllContentPagesAsync())
            .SelectMany(x => x.Tags)
            .GroupBy(x => x)
            .Select(group => (group.Key, group.Count()))
            .OrderByDescending(x => x.Item2)
            .ToImmutableList();

    }

}