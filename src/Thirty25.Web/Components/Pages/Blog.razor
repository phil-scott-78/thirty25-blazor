@page "/blog/{*fileName:nonfile}"
@using MyLittleContentEngine
@using MyLittleContentEngine.Models
@using MyLittleContentEngine.Services.Content
@using Thirty25.Web.Components.Layout
@inject ContentEngineOptions Options
@inject MarkdownContentService<BlogFrontMatter> MarkdownContentService

@* Show specific post by filename param *@
@if (_post == null)
{
    <div>Post not found 🤷</div>
    return;
}
<PageTitle>@Options.SiteTitle - @_post.FrontMatter.Title</PageTitle>
<BlogPost MarkdownContentPage="_post" HtmlContent="@_postContent" Series="_series"/>

@code{
    [Parameter] public required string FileName { get; init; }
    MarkdownContentPage<BlogFrontMatter>? _post;
    string? _postContent;
    List<MarkdownContentPage<BlogFrontMatter>>? _series;

    protected override async Task OnInitializedAsync()
    {
        var page = await MarkdownContentService.GetRenderedContentPageByUrlOrDefault(FileName);
        if (page == null)
        {
            _post = null;
            _postContent = null;
            return;
        }
        
        _post = page.Value.Page;
        _postContent = page.Value.HtmlContent;
        
        if (_post != null && !string.IsNullOrWhiteSpace(_post.FrontMatter.Series))
        {
            var allPosts = await MarkdownContentService.GetAllContentPagesAsync();
            _series = allPosts
                .Where(i => string.Equals(i.FrontMatter.Series, _post.FrontMatter.Series, StringComparison.OrdinalIgnoreCase))
                .OrderBy(i => i.FrontMatter.Date)
                .ToList();
        }
    }
}
