@page "/blog/{*fileName:nonfile}"
@using BlazorStatic
@using BlazorStatic.Models
@using BlazorStatic.Services.Content
@using Thirty25.Web.Components.Layout
@inject BlazorStaticOptions Options
@inject BlazorStaticMarkdownContentService<BlogFrontMatter> BlazorStaticMarkdownContentService

@* Show specific post by filename param *@
@if (_post == null)
{
    <div>Post not found 🤷</div>
    return;
}
<PageTitle>@Options.BlogTitle - @_post.FrontMatter.Title</PageTitle>
<BlogPost MarkdownContentPage="_post" Series="_series"/>

@code{
    [Parameter] public required string FileName { get; init; }
    MarkdownContentPage<BlogFrontMatter>? _post;
    List<MarkdownContentPage<BlogFrontMatter>>? _series;

    protected override async Task OnInitializedAsync()
    {
        _post = await BlazorStaticMarkdownContentService.GetContentPageByUrlOrDefault(FileName);
        
        if (_post != null && !string.IsNullOrWhiteSpace(_post.FrontMatter.Series))
        {
            var allPosts = await BlazorStaticMarkdownContentService.GetAllContentPagesAsync();
            _series = allPosts
                .Where(i => string.Equals(i.FrontMatter.Series, _post.FrontMatter.Series, StringComparison.OrdinalIgnoreCase))
                .OrderBy(i => i.FrontMatter.Date)
                .ToList();
        }
    }
}
